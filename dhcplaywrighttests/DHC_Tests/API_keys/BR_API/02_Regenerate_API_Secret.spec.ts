import { test, expect } from '@playwright/test';
import * as dialogs from "../../../Util/UIElements/dialogNames";
import * as urls from "../../../Util/UIElements/urls";
import * as buttons from "../../..//Util/UIElements/buttonNames"; 
import * as message from "../../../Util/assertions"; 
import * as data from "../../../Util/testData";
test.skip("Regenerate API secret, @regression", async ({ page }) => {
  // Visit the specific API key page
  await page.goto(urls.BR_CLOUD_API_LINK + data.BR_API_REGENERATE_ID);
  // Click on "Regenerate API secret" button
  await page.getByRole("button", { name: buttons.REGENERATE_API_BUTTON }).click();
  // Click on "Regenerate API secret" button on the dialog box that pops up
  await page.getByRole("dialog", { name: dialogs.REGENERATE_CREDENTIALS }).getByRole("button", { name: buttons.REGENERATE_API_BUTTON }).click();
  // Assert that new credentials were generated by verifying that the text appears on the page
  expect(await page.getByText(message.NEW_CREDENTIALS_GENERATED)).toBeTruthy();
  // Click on "Close" button
  await page.getByRole('button', { name: buttons.CLOSE_BUTTON }).filter({ hasText: buttons.CLOSE_BUTTON}).click();
}); 